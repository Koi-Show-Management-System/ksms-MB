name: Build and Release Expo App

on:
  push:
    branches: [main, development]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18
          cache: 'yarn'
          
      - name: Install dependencies
        run: |
          yarn install
          
      - name: Install EAS CLI
        run: npm install -g eas-cli
        
      - name: Install Android SDK
        uses: android-actions/setup-android@v3
        
      - name: Setup Expo
        uses: expo/expo-github-action@v8
        with:
          expo-version: latest
          eas-version: latest
          token: ${{ secrets.EXPO_TOKEN }}
          
      - name: Create eas.json
        run: |
          cat > eas.json << 'EOL'
          {
            "cli": {
              "version": ">= 3.13.3",
              "appVersionSource": "remote"
            },
            "build": {
              "development": {
                "developmentClient": true,
                "distribution": "internal",
                "android": {
                  "buildType": "apk",
                  "gradleCommand": ":app:assembleDebug"
                }
              },
              "preview": {
                "distribution": "internal",
                "android": {
                  "buildType": "apk"
                }
              },
              "production": {
                "autoIncrement": true,
                "android": {
                  "buildType": "apk"
                }
              }
            }
          }
          EOL
          
      - name: Configure Expo
        run: |
          expo login -u nhatsang29 --non-interactive
          
      - name: Build Android app
        run: |
          eas build --local \
          --non-interactive \
          --output=./app-build \
          --platform=android \
          --profile=production
        env:
          EXPO_TOKEN: ${{ secrets.EXPO_TOKEN }}
          
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: v1.0.${{ github.run_number }}
          release_name: Release v1.0.${{ github.run_number }}
          body: |
            KSMS Mobile App Release
            Build number: ${{ github.run_number }}
          prerelease: true
          
      - name: Upload Release Asset
        id: upload-release-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./app-build/*.apk
          asset_name: ksms-mb-v1.0.${{ github.run_number }}.apk
          asset_content_type: application/vnd.android.package-archive
          
      - name: Generating QR code
        id: generating_qr_code
        uses: kentaro-m/qr-code-commenter-action@v0.1.2
        with:
          repo-token: "${{ secrets.GITHUB_TOKEN }}"
          content: https://github.com/nhatsang29/ksms-MB/releases/download/v1.0.${{ github.run_number }}/ksms-mb-v1.0.${{ github.run_number }}.apk
          comment: |
            :lock: Scan QR code below to download KSMS Mobile App :iphone: