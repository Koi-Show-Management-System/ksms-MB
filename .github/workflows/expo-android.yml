name: EAS Build Android

on:
  push:
    branches: [ main, develop ]
    paths-ignore:
      - '**.md'
      - '.github/**'
      - '!.github/workflows/android-build.yml'
  pull_request:
    branches: [ main, develop ]
  workflow_dispatch:
    inputs:
      profile:
        description: 'Build profile (development, preview, production)'
        required: true
        default: 'preview'
        type: choice
        options:
          - development
          - preview
          - production

jobs:
  build:
    name: EAS Build Android
    runs-on: [google]
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      
      - name: Determine build profile
        id: profile
        run: |
          if [ "${{ github.event_name }}" == "workflow_dispatch" ]; then
            echo "name=${{ github.event.inputs.profile }}" >> $GITHUB_OUTPUT
          elif [ "${{ github.ref }}" == "refs/heads/main" ]; then
            echo "name=production" >> $GITHUB_OUTPUT
          else
            echo "name=preview" >> $GITHUB_OUTPUT
          fi
      
      - name: Setup build directories
        run: |
          mkdir -p $HOME/expo-tmp
          mkdir -p $HOME/eas-builds/working
          mkdir -p $HOME/eas-builds/artifacts
          
          # Tạo thư mục lưu trữ APK theo ngày
          BUILD_DATE=$(date +"%Y-%m-%d")
          STORAGE_DIR=$HOME/ksms-builds/$BUILD_DATE
          mkdir -p $STORAGE_DIR
          echo "STORAGE_DIR=$STORAGE_DIR" >> $GITHUB_ENV
          
          # Xóa dữ liệu build cũ
          rm -rf $HOME/eas-builds/working/*
          rm -rf $HOME/expo-tmp/*
          rm -rf $HOME/eas-builds/artifacts/*
          
          # Thiết lập và lưu biến môi trường
          echo "TMPDIR=$HOME/expo-tmp" >> $GITHUB_ENV
          echo "EAS_LOCAL_BUILD_WORKINGDIR=$HOME/eas-builds/working" >> $GITHUB_ENV
          echo "EAS_LOCAL_BUILD_ARTIFACTS_DIR=$HOME/eas-builds/artifacts" >> $GITHUB_ENV
          echo "EAS_LOCAL_BUILD_SKIP_CLEANUP=1" >> $GITHUB_ENV
          echo "BUILD_TIMESTAMP=$(date +"%Y%m%d_%H%M%S")" >> $GITHUB_ENV
          
          # Hiển thị không gian đĩa
          echo "Disk space:"
          df -h
      
      - name: Install dependencies
        run: |
          yarn install
      
      - name: Authenticate with Expo
        run: |
          if [ -n "${{ secrets.EXPO_TOKEN }}" ]; then
            export EXPO_TOKEN="${{ secrets.EXPO_TOKEN }}"
          else
            npx expo login -u ${{ secrets.EXPO_USERNAME }} -p ${{ secrets.EXPO_PASSWORD }}
          fi
      
      - name: Build Android App
        id: build
        continue-on-error: true
        run: |
          echo "Building Android app with profile: ${{ steps.profile.outputs.name }}"
          # Thêm cờ --verbose để hiển thị thông tin chi tiết
          eas build --platform android --local --non-interactive --profile=${{ steps.profile.outputs.name }} --verbose
          echo "build_exit_code=$?" >> $GITHUB_OUTPUT
      
      - name: Log build result
        run: |
          if [ "${{ steps.build.outputs.build_exit_code }}" != "0" ]; then
            echo "Build failed with exit code ${{ steps.build.outputs.build_exit_code }}"
            mkdir -p ${{ env.STORAGE_DIR }}/logs
            # Lưu log build nếu có
            if [ -f "${{ env.EAS_LOCAL_BUILD_WORKINGDIR }}/eas-build.log" ]; then
              cp "${{ env.EAS_LOCAL_BUILD_WORKINGDIR }}/eas-build.log" "${{ env.STORAGE_DIR }}/logs/build-log-${{ env.BUILD_TIMESTAMP }}.txt"
            fi
            # Tìm kiếm và lưu các file log khác
            find ${{ env.EAS_LOCAL_BUILD_WORKINGDIR }} -name "*.log" -type f -exec cp {} ${{ env.STORAGE_DIR }}/logs/ \;
            find ${{ env.TMPDIR }} -name "*.log" -type f -exec cp {} ${{ env.STORAGE_DIR }}/logs/ \;
          else
            echo "Build completed successfully"
          fi
      
      - name: Save APK to local storage
        if: steps.build.outcome == 'success'
        run: |
          # Tìm file APK trong thư mục artifacts
          APK_FILE=$(find ${{ env.EAS_LOCAL_BUILD_ARTIFACTS_DIR }} -name "*.apk" | head -n 1)
          
          if [ -n "$APK_FILE" ]; then
            # Tạo tên file với profile và timestamp
            APK_FILENAME="ksms-${{ steps.profile.outputs.name }}-${{ env.BUILD_TIMESTAMP }}.apk"
            
            # Sao chép file APK vào thư mục lưu trữ
            cp "$APK_FILE" "${{ env.STORAGE_DIR }}/$APK_FILENAME"
            
            # Tạo metadata
            echo "Build completed at $(date)" > "${{ env.STORAGE_DIR }}/metadata-${{ env.BUILD_TIMESTAMP }}.txt"
            echo "Profile: ${{ steps.profile.outputs.name }}" >> "${{ env.STORAGE_DIR }}/metadata-${{ env.BUILD_TIMESTAMP }}.txt"
            echo "Branch: ${{ github.ref }}" >> "${{ env.STORAGE_DIR }}/metadata-${{ env.BUILD_TIMESTAMP }}.txt"
            echo "Commit: ${{ github.sha }}" >> "${{ env.STORAGE_DIR }}/metadata-${{ env.BUILD_TIMESTAMP }}.txt"
            
            echo "APK saved to ${{ env.STORAGE_DIR }}/$APK_FILENAME"
          else
            echo "No APK file found in artifacts directory!"
            ls -la ${{ env.EAS_LOCAL_BUILD_ARTIFACTS_DIR }}
            exit 1
          fi
      
      - name: List recent APKs
        run: |
          echo "=== Recent APK Builds ==="
          find $HOME/ksms-builds -type f -name "*.apk" -mtime -7 | sort -r
