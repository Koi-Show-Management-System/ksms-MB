name: Build APK với EAS

permissions:
  contents: write
  packages: write
  actions: write

on:
  push:
    branches: [main, development]
    paths:
      - 'app/**'
      - 'assets/**'
      - 'package.json'
      - 'yarn.lock'
      - 'app.json'
      - 'eas.json'
      - 'babel.config.js'
      - 'metro.config.js'
  pull_request:
    branches: [main, development]
  workflow_dispatch:
    inputs:
      build_profile:
        description: 'Build profile (development, preview, production)'
        required: true
        default: 'production'
        type: choice
        options:
          - development
          - preview
          - production
      clean_old_builds:
        description: 'Xóa các bản build cũ (để giải phóng không gian)'
        type: boolean
        default: false

env:
  APP_NAME: KSMS
  MAX_BUILDS_PER_PROFILE: 3
  NODE_MODULES_CACHE_KEY: node-modules-${{ github.run_number }}
  DEPLOY_DIR: /var/www/html/apk-downloads
  ANDROID_KEYSTORE_ALIAS: ${{ secrets.ANDROID_KEYSTORE_ALIAS }}
  ANDROID_KEYSTORE_BASE64: ${{ secrets.ANDROID_KEYSTORE_BASE64 }}
  ANDROID_KEYSTORE_PASSWORD: ${{ secrets.ANDROID_KEYSTORE_PASSWORD }}
  ANDROID_KEY_PASSWORD: ${{ secrets.ANDROID_KEY_PASSWORD }}
  EXPO_TOKEN: ${{ secrets.EXPO_TOKEN }}

jobs:
  build:
    name: Xây dựng APK Android
    runs-on: self-hosted
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Lấy toàn bộ lịch sử commit để phân tích phiên bản
      
      - name: Thiết lập Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 20.x
          cache: "yarn"

      - name: Thiết lập JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: "17"
          distribution: "temurin"

      - name: Thiết lập Android SDK
        uses: android-actions/setup-android@v3
        
      - name: Cache node modules
        uses: actions/cache@v3
        id: yarn-cache
        with:
          path: |
            **/node_modules
            ${{ github.workspace }}/.yarn/cache
          key: ${{ runner.os }}-yarn-${{ env.NODE_MODULES_CACHE_KEY }}
          restore-keys: |
            ${{ runner.os }}-yarn-

      - name: Cache Gradle
        uses: actions/cache@v3
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Thiết lập Expo
        uses: expo/expo-github-action@v8
        with:
          expo-version: latest
          eas-version: latest
          token: ${{ secrets.EXPO_TOKEN }}

      - name: Kiểm tra và tăng phiên bản build
        id: version
        run: |
          # Xác định build profile
          if [ "${{ github.event_name }}" == "workflow_dispatch" ]; then
            echo "BUILD_PROFILE=${{ github.event.inputs.build_profile }}" >> $GITHUB_ENV
          else
            echo "BUILD_PROFILE=production" >> $GITHUB_ENV
          fi
          
          # Tạo timestamp cho bản build
          BUILD_TIMESTAMP=$(date +"%Y%m%d_%H%M%S")
          echo "BUILD_TIMESTAMP=$BUILD_TIMESTAMP" >> $GITHUB_ENV
          
          # Tính toán số phiên bản dựa trên số lượng commit
          GIT_COMMIT_COUNT=$(git rev-list --count HEAD)
          echo "BUILD_NUMBER=$GIT_COMMIT_COUNT" >> $GITHUB_ENV
          
          # Tạo tên phiên bản đầy đủ
          if [ "${{ env.BUILD_PROFILE }}" == "production" ]; then
            VERSION_NAME="${{ env.APP_NAME }}_v$(node -p "require('./package.json').version")_$GIT_COMMIT_COUNT"
          else
            VERSION_NAME="${{ env.APP_NAME }}_${{ env.BUILD_PROFILE }}_v$(node -p "require('./package.json').version")_$GIT_COMMIT_COUNT"
          fi
          echo "VERSION_NAME=$VERSION_NAME" >> $GITHUB_ENV
          
          echo "::set-output name=version_name::$VERSION_NAME"
          echo "::set-output name=build_number::$GIT_COMMIT_COUNT"

      - name: Cài đặt dependencies
        run: |
          if [ "${{ steps.yarn-cache.outputs.cache-hit }}" != "true" ]; then
            echo "Cache không có sẵn - cài đặt dependencies..."
            yarn install --frozen-lockfile
          else
            echo "Sử dụng node_modules từ cache"
          fi

      - name: Thiết lập Android Keystore
        if: env.BUILD_PROFILE == 'production' && github.ref == 'refs/heads/main'
        run: |
          if [ -n "${{ secrets.ANDROID_KEYSTORE_BASE64 }}" ]; then
            echo "Thiết lập keystore cho ký ứng dụng..."
            KEYSTORE_PATH=$GITHUB_WORKSPACE/android/app/release.keystore
            echo "${{ secrets.ANDROID_KEYSTORE_BASE64 }}" | base64 -d > $KEYSTORE_PATH
            
            # Cập nhật gradle.properties
            GRADLE_PROPS=$GITHUB_WORKSPACE/android/gradle.properties
            
            # Backup file gốc
            cp $GRADLE_PROPS ${GRADLE_PROPS}.bak
            
            # Thêm cấu hình signing
            echo "" >> $GRADLE_PROPS
            echo "# Cấu hình signing tự động" >> $GRADLE_PROPS
            echo "KSMS_RELEASE_STORE_FILE=release.keystore" >> $GRADLE_PROPS
            echo "KSMS_RELEASE_KEY_ALIAS=${{ secrets.ANDROID_KEY_ALIAS }}" >> $GRADLE_PROPS
            echo "KSMS_RELEASE_STORE_PASSWORD=${{ secrets.ANDROID_KEYSTORE_PASSWORD }}" >> $GRADLE_PROPS
            echo "KSMS_RELEASE_KEY_PASSWORD=${{ secrets.ANDROID_KEY_PASSWORD }}" >> $GRADLE_PROPS
            
            echo "Đã thiết lập keystore thành công!"
          else
            echo "Không tìm thấy keystore, sẽ sử dụng debug signing"
          fi

      - name: Xây dựng ứng dụng Android
        run: |
          echo "Đang xây dựng APK cho profile: ${{ env.BUILD_PROFILE }}"
          echo "Tên phiên bản: ${{ env.VERSION_NAME }}"
          
          # Xây dựng APK
          eas build \
            --platform android \
            --profile ${{ env.BUILD_PROFILE }} \
            --local \
            --non-interactive \
            --output ${{ github.workspace }}/${{ env.VERSION_NAME }}.apk
          
          # Kiểm tra kết quả
          if [ -f "${{ github.workspace }}/${{ env.VERSION_NAME }}.apk" ]; then
            echo "APK_BUILD_SUCCESS=true" >> $GITHUB_ENV
            echo "APK_PATH=${{ github.workspace }}/${{ env.VERSION_NAME }}.apk" >> $GITHUB_ENV
            echo "✅ Xây dựng APK thành công!"
          else
            echo "APK_BUILD_SUCCESS=false" >> $GITHUB_ENV
            echo "❌ Xây dựng APK thất bại!"
            exit 1
          fi

      - name: Dọn dẹp bản build cũ
        if: github.event.inputs.clean_old_builds == 'true'
        run: |
          echo "Đang dọn dẹp các bản build cũ..."
          
          # Đếm số lượng thư mục build cho mỗi profile
          for PROFILE in "production" "preview" "development"; do
            BUILD_COUNT=$(find ${{ env.DEPLOY_DIR }} -maxdepth 1 -type d -name "${PROFILE}_*" | wc -l)
            
            # Nếu số lượng vượt quá giới hạn, xóa các bản cũ nhất
            if [ $BUILD_COUNT -gt ${{ env.MAX_BUILDS_PER_PROFILE }} ]; then
              BUILDS_TO_DELETE=$((BUILD_COUNT - ${{ env.MAX_BUILDS_PER_PROFILE }}))
              echo "Tìm thấy $BUILD_COUNT bản $PROFILE, sẽ xóa $BUILDS_TO_DELETE bản cũ nhất"
              
              # Liệt kê các thư mục theo thứ tự thời gian (cũ nhất trước) và xóa
              find ${{ env.DEPLOY_DIR }} -maxdepth 1 -type d -name "${PROFILE}_*" | sort | head -n $BUILDS_TO_DELETE | while read DIR; do
                echo "Xóa $DIR"
                echo '${{ secrets.SSH_PASSWORD }}' | sudo -S rm -rf "$DIR"
              done
            else
              echo "Chỉ có $BUILD_COUNT bản $PROFILE, không cần xóa"
            fi
          done

      - name: Lưu trữ APK trên server
        if: env.APK_BUILD_SUCCESS == 'true'
        run: |
          # Tạo thư mục lưu trữ APK trên server
          echo '${{ secrets.SSH_PASSWORD }}' | sudo -S mkdir -p ${{ env.DEPLOY_DIR }}
          
          # Tạo thư mục cho build hiện tại
          BUILD_DIR="${{ env.DEPLOY_DIR }}/${{ env.BUILD_PROFILE }}_${{ env.BUILD_TIMESTAMP }}"
          echo '${{ secrets.SSH_PASSWORD }}' | sudo -S mkdir -p $BUILD_DIR
          
          # Copy APK vào thư mục triển khai
          echo '${{ secrets.SSH_PASSWORD }}' | sudo -S cp ${{ env.APK_PATH }} $BUILD_DIR/
          
          # Tạo symbolic link đến build mới nhất
          echo '${{ secrets.SSH_PASSWORD }}' | sudo -S ln -sf $BUILD_DIR ${{ env.DEPLOY_DIR }}/latest_${{ env.BUILD_PROFILE }}
          
          # Tạo file thông tin về build
          cat << EOF | echo '${{ secrets.SSH_PASSWORD }}' | sudo -S tee $BUILD_DIR/build_info.txt
          Thông tin Build:
          ================
          Tên ứng dụng: ${{ env.APP_NAME }}
          Profile: ${{ env.BUILD_PROFILE }}
          Phiên bản: $(node -p "require('./package.json').version")
          Build Number: ${{ env.BUILD_NUMBER }}
          Commit: ${{ github.sha }}
          Branch: ${GITHUB_REF##*/}
          Ngày xây dựng: $(date)
          Workflow run: ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}
          EOF
          
          # Phân quyền để web server có thể phục vụ
          echo '${{ secrets.SSH_PASSWORD }}' | sudo -S chmod -R 755 ${{ env.DEPLOY_DIR }}
          
          # Lấy tên APK
          APK_NAME=$(basename ${{ env.APK_PATH }})
          
          # In ra đường dẫn tải xuống
          DOWNLOAD_URL="https://ksms.news/apk-downloads/latest_${{ env.BUILD_PROFILE }}/$APK_NAME"
          echo "APK_DOWNLOAD_URL=$DOWNLOAD_URL" >> $GITHUB_ENV
          echo "✅ APK có sẵn tại: $DOWNLOAD_URL"

      - name: Cập nhật trang download
        if: env.APK_BUILD_SUCCESS == 'true'
        run: |
          # Tạo/cập nhật file index.html với giao diện đẹp hơn
          cat << EOF | echo '${{ secrets.SSH_PASSWORD }}' | sudo -S tee ${{ env.DEPLOY_DIR }}/index.html
          <!DOCTYPE html>
          <html lang="vi">
          <head>
              <meta charset="UTF-8">
              <meta name="viewport" content="width=device-width, initial-scale=1.0">
              <title>${{ env.APP_NAME }} - APK Downloads</title>
              <style>
                  :root {
                      --primary-color: #4285F4;
                      --success-color: #0F9D58;
                      --warning-color: #F4B400;
                      --danger-color: #DB4437;
                      --light-bg: #f8f9fa;
                  }
                  body {
                      font-family: 'Roboto', Arial, sans-serif;
                      margin: 0;
                      padding: 0;
                      background-color: #f5f5f5;
                      color: #333;
                      line-height: 1.6;
                  }
                  .container {
                      max-width: 1000px;
                      margin: 0 auto;
                      padding: 30px 20px;
                  }
                  header {
                      background-color: var(--primary-color);
                      color: white;
                      padding: 20px 0;
                      text-align: center;
                      border-radius: 8px 8px 0 0;
                      margin-bottom: 30px;
                      box-shadow: 0 2px 10px rgba(0,0,0,0.1);
                  }
                  h1 {
                      margin: 0;
                      font-size: 2.5em;
                  }
                  .app-description {
                      margin-top: 10px;
                      font-size: 1.1em;
                      opacity: 0.9;
                  }
                  .builds-container {
                      display: grid;
                      grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));
                      gap: 20px;
                      margin-bottom: 40px;
                  }
                  .build-card {
                      background-color: white;
                      border-radius: 8px;
                      box-shadow: 0 2px 10px rgba(0,0,0,0.1);
                      overflow: hidden;
                      transition: transform 0.2s, box-shadow 0.2s;
                  }
                  .build-card:hover {
                      transform: translateY(-5px);
                      box-shadow: 0 5px 15px rgba(0,0,0,0.1);
                  }
                  .build-header {
                      padding: 15px 20px;
                      border-bottom: 1px solid #eee;
                  }
                  .build-header.production {
                      background-color: var(--success-color);
                      color: white;
                  }
                  .build-header.preview {
                      background-color: var(--warning-color);
                      color: white;
                  }
                  .build-header.development {
                      background-color: var(--danger-color);
                      color: white;
                  }
                  .build-content {
                      padding: 20px;
                  }
                  .build-description {
                      margin-bottom: 20px;
                      color: #555;
                  }
                  .build-meta {
                      font-size: 0.85em;
                      color: #777;
                      margin-top: 15px;
                  }
                  .download-btn {
                      display: inline-block;
                      background-color: var(--primary-color);
                      color: white;
                      padding: 10px 20px;
                      text-decoration: none;
                      border-radius: 4px;
                      font-weight: 500;
                      transition: background-color 0.2s;
                  }
                  .download-btn:hover {
                      background-color: #3367d6;
                  }
                  .version-badge {
                      display: inline-block;
                      background-color: var(--light-bg);
                      padding: 3px 8px;
                      border-radius: 4px;
                      font-size: 0.85em;
                      margin-right: 5px;
                  }
                  footer {
                      text-align: center;
                      margin-top: 50px;
                      color: #777;
                      font-size: 0.9em;
                  }
                  @media (max-width: 768px) {
                      .builds-container {
                          grid-template-columns: 1fr;
                      }
                  }
              </style>
          </head>
          <body>
              <div class="container">
                  <header>
                      <h1>${{ env.APP_NAME }} Downloads</h1>
                      <div class="app-description">Tải ứng dụng Android mới nhất</div>
                  </header>
                  
                  <div class="builds-container">
                      <div class="build-card">
                          <div class="build-header production">
                              <h2>Production Build</h2>
                          </div>
                          <div class="build-content">
                              <div class="build-description">
                                  Phiên bản ổn định và chính thức, đã được kiểm tra đầy đủ.
                              </div>
                              <a href="latest_production/" class="download-btn">Tải APK Production</a>
                              <div class="build-meta">
                                  <div><span class="version-badge">Stable</span></div>
                                  <div>Cập nhật: $(date +'%d/%m/%Y %H:%M')</div>
                              </div>
                          </div>
                      </div>
                      
                      <div class="build-card">
                          <div class="build-header preview">
                              <h2>Preview Build</h2>
                          </div>
                          <div class="build-content">
                              <div class="build-description">
                                  Phiên bản xem trước với các tính năng sắp ra mắt, đã qua kiểm thử cơ bản.
                              </div>
                              <a href="latest_preview/" class="download-btn">Tải APK Preview</a>
                              <div class="build-meta">
                                  <div><span class="version-badge">Beta</span></div>
                                  <div>Cập nhật: $(date +'%d/%m/%Y %H:%M')</div>
                              </div>
                          </div>
                      </div>
                      
                      <div class="build-card">
                              <h2>Development Build</h2>
                          </div>
                          <div class="build-content">
                              <div class="build-description">
                                  Phiên bản phát triển mới nhất với tính năng đang phát triển, có thể chưa ổn định.
                              </div>
                              <a href="latest_development/" class="download-btn">Tải APK Development</a>
                              <div class="build-meta">
                                  <div><span class="version-badge">Alpha</span></div>
                                  <div>Cập nhật: $(date +'%d/%m/%Y %H:%M')</div>
                              </div>
                          </div>
                      </div>
                  </div>
                  
                  <footer>
                      <p>
                          &copy; $(date +'%Y') ${{ env.APP_NAME }} Team. Tất cả các bản build được tạo tự động thông qua GitHub Actions.
                          <br>
                          Build mới nhất: ${{ env.BUILD_PROFILE }} - ${{ env.BUILD_TIMESTAMP }}
                      </p>
                  </footer>
              </div>
          </body>
          </html>
          EOF 
